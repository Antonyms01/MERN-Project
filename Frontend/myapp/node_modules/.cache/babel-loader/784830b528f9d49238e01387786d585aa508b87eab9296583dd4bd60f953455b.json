{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Frontend\\\\myapp\\\\src\\\\Components\\\\TransactionList.js\",\n  _s = $RefreshSig$();\n// src/components/TransactionList.js\nimport React, { useEffect, useState } from 'react';\nimport { getTransactions } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const month = \"January\"; // Example month, you can make this dynamic\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      setLoading(true);\n      try {\n        const data = await getTransactions(month);\n        setTransactions(data.transactions);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTransactions();\n  }, [month]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Transaction List for \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionList, \"5jbk8HdePT8SHyzZX04TAttKX7Q=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useEffect","useState","getTransactions","jsxDEV","_jsxDEV","TransactionList","_s","transactions","setTransactions","loading","setLoading","error","setError","month","fetchTransactions","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN/Frontend/myapp/src/Components/TransactionList.js"],"sourcesContent":["// src/components/TransactionList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getTransactions } from '../api/api';\r\n\r\nconst TransactionList = () => {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const month = \"January\"; // Example month, you can make this dynamic\r\n\r\n    useEffect(() => {\r\n        const fetchTransactions = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await getTransactions(month);\r\n                setTransactions(data.transactions);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchTransactions();\r\n    }, [month]);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Transaction List for {month}</h2>\r\n            <ul>\r\n                {/* {transactions.map(transaction => (\r\n                    <li key={transaction.title}>\r\n                        <h3>{transaction.title}</h3>\r\n                        <p>{transaction.description}</p>\r\n                        <p>Price: ${transaction.price}</p>\r\n                      \r\n                    </li>\r\n                ))} */}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,KAAK,GAAG,SAAS,CAAC,CAAC;;EAEzBb,SAAS,CAAC,MAAM;IACZ,MAAMc,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClCJ,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMK,IAAI,GAAG,MAAMb,eAAe,CAACW,KAAK,CAAC;QACzCL,eAAe,CAACO,IAAI,CAACR,YAAY,CAAC;MACtC,CAAC,CAAC,OAAOS,GAAG,EAAE;QACVJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACNP,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDI,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIX,KAAK,EAAE,oBAAOP,OAAA;IAAAc,QAAA,GAAK,SAAO,EAACP,KAAK;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACIlB,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,GAAI,uBAAqB,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrClB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CAzCID,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}