{"ast":null,"code":"// src/api/api.js\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:8000'; // Adjust this to match your API's base URL\n\n// Function to get transactions based on filters\n// src/api/api.js\n\n// Function to get transactions based on filters\nexport const getTransactions = async (month, searchText, searchType, page, perPage) => {\n  try {\n    const params = {\n      month,\n      page,\n      perPage\n    };\n\n    // Add the appropriate search parameter based on the search type\n    if (searchType === 'title') {\n      params.title = searchText;\n    } else if (searchType === 'description') {\n      params.description = searchText;\n    } else if (searchType === 'price') {\n      params.price = searchText; // Ensure price is sent as a string if your backend expects it that way\n    }\n    const response = await axios.get(`${BASE_URL}/transaction`, {\n      params\n    });\n    return response.data; // Return the fetched data\n  } catch (error) {\n    console.error(\"Error fetching transactions:\", error);\n    throw error;\n  }\n};\n\n// Function to get statistics based on the month\nexport const getStatistics = async month => {\n  try {\n    const response = await axios.get(`${BASE_URL}/statistics`, {\n      params: {\n        month\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching statistics:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","getTransactions","month","searchText","searchType","page","perPage","params","title","description","price","response","get","data","error","console","getStatistics"],"sources":["D:/MERN/Frontend/myapp/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:8000'; // Adjust this to match your API's base URL\r\n\r\n// Function to get transactions based on filters\r\n// src/api/api.js\r\n\r\n\r\n// Function to get transactions based on filters\r\nexport const getTransactions = async (month, searchText, searchType, page, perPage) => {\r\n    try {\r\n        const params = {\r\n            month,\r\n            page,\r\n            perPage,\r\n        };\r\n\r\n        // Add the appropriate search parameter based on the search type\r\n        if (searchType === 'title') {\r\n            params.title = searchText;\r\n        } else if (searchType === 'description') {\r\n            params.description = searchText;\r\n        } else if (searchType === 'price') {\r\n            params.price = searchText; // Ensure price is sent as a string if your backend expects it that way\r\n        }\r\n\r\n        const response = await axios.get(`${BASE_URL}/transaction`, { params });\r\n        return response.data; // Return the fetched data\r\n    } catch (error) {\r\n        console.error(\"Error fetching transactions:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n\r\n// Function to get statistics based on the month\r\nexport const getStatistics = async (month) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/statistics`, {\r\n            params: { month }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching statistics:\", error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C;AACA;;AAGA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,UAAU,EAAEC,UAAU,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACnF,IAAI;IACA,MAAMC,MAAM,GAAG;MACXL,KAAK;MACLG,IAAI;MACJC;IACJ,CAAC;;IAED;IACA,IAAIF,UAAU,KAAK,OAAO,EAAE;MACxBG,MAAM,CAACC,KAAK,GAAGL,UAAU;IAC7B,CAAC,MAAM,IAAIC,UAAU,KAAK,aAAa,EAAE;MACrCG,MAAM,CAACE,WAAW,GAAGN,UAAU;IACnC,CAAC,MAAM,IAAIC,UAAU,KAAK,OAAO,EAAE;MAC/BG,MAAM,CAACG,KAAK,GAAGP,UAAU,CAAC,CAAC;IAC/B;IAEA,MAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGZ,QAAQ,cAAc,EAAE;MAAEO;IAAO,CAAC,CAAC;IACvE,OAAOI,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAID;AACA,OAAO,MAAME,aAAa,GAAG,MAAOd,KAAK,IAAK;EAC1C,IAAI;IACA,MAAMS,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGZ,QAAQ,aAAa,EAAE;MACvDO,MAAM,EAAE;QAAEL;MAAM;IACpB,CAAC,CAAC;IACF,OAAOS,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}