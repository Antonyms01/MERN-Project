{"ast":null,"code":"// src/api/api.js\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:8000/'; // Adjust this to match your API's base URL\n\n// Function to get transactions based on filters\nexport const getTransactions = async (month, title, page, perPage) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/// src/components/TransactionList.js\nimport React, { useEffect, useState } from 'react';\nimport { getTransactions } from '../api/api';\n\nconst TransactionList = () => {\n    const [transactions, setTransactions] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const month = \"January\"; // Example month, you can make this dynamic\n\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            setLoading(true);\n            try {\n                const data = await getTransactions(month);\n                setTransactions(data.transactions);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchTransactions();\n    }, [month]);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div>\n            <h2>Transaction List for {month}</h2>\n            <ul>\n                {transactions.map(transaction => (\n                    <li key={transaction.title}>\n                        <h3>{transaction.title}</h3>\n                        <p>{transaction.description}</p>\n                        <p>Price: ${transaction.price}</p>\n                      \n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TransactionList;\n`, {\n      params: {\n        month,\n        title,\n        page,\n        perPage\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching transactions:\", error);\n    throw error;\n  }\n};\n\n// Function to get statistics based on the month\nexport const getStatistics = async month => {\n  try {\n    const response = await axios.get(`${BASE_URL}/statistics`, {\n      params: {\n        month\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching statistics:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","getTransactions","month","title","page","perPage","response","get","transaction","price","params","data","error","console","getStatistics"],"sources":["D:/MERN/Frontend/myapp/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:8000/'; // Adjust this to match your API's base URL\r\n\r\n// Function to get transactions based on filters\r\nexport const getTransactions = async (month, title, page, perPage) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/// src/components/TransactionList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getTransactions } from '../api/api';\r\n\r\nconst TransactionList = () => {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const month = \"January\"; // Example month, you can make this dynamic\r\n\r\n    useEffect(() => {\r\n        const fetchTransactions = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await getTransactions(month);\r\n                setTransactions(data.transactions);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchTransactions();\r\n    }, [month]);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Transaction List for {month}</h2>\r\n            <ul>\r\n                {transactions.map(transaction => (\r\n                    <li key={transaction.title}>\r\n                        <h3>{transaction.title}</h3>\r\n                        <p>{transaction.description}</p>\r\n                        <p>Price: ${transaction.price}</p>\r\n                      \r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionList;\r\n`, {\r\n            params: {\r\n                month,\r\n                title,\r\n                page,\r\n                perPage\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching transactions:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to get statistics based on the month\r\nexport const getStatistics = async (month) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/statistics`, {\r\n            params: { month }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching statistics:\", error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,wBAAwB,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAClE,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoCQ,WAAW,CAACC,KAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE;MACSC,MAAM,EAAE;QACJR,KAAK;QACLC,KAAK;QACLC,IAAI;QACJC;MACJ;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACK,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAOZ,KAAK,IAAK;EAC1C,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,aAAa,EAAE;MACvDU,MAAM,EAAE;QAAER;MAAM;IACpB,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACK,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}