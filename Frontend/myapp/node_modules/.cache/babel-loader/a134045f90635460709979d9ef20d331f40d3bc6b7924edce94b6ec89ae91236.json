{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Frontend\\\\myapp\\\\src\\\\Components\\\\Statistics.js\",\n  _s = $RefreshSig$();\n// src/components/Statistics.js\nimport React, { useEffect, useState } from 'react';\nimport { getStatistics } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = () => {\n  _s();\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const month = \"January\"; // Example month, you can make this dynamic\n\n  useEffect(() => {\n    const fetchStatistics = async () => {\n      setLoading(true);\n      try {\n        // const data = await getStatistics(month);\n        // setStats(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStatistics();\n  }, [month]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Statistics for \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Sales: $\", stats.totalSales]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Sold Items: \", stats.totalSoldItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Not Sold Items: \", stats.totalNotSoldItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Statistics, \"h9VXH4/xnngUJwEgxQ01Gk81HxU=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useEffect","useState","getStatistics","jsxDEV","_jsxDEV","Statistics","_s","stats","setStats","loading","setLoading","error","setError","month","fetchStatistics","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","totalSales","totalSoldItems","totalNotSoldItems","_c","$RefreshReg$"],"sources":["D:/MERN/Frontend/myapp/src/Components/Statistics.js"],"sourcesContent":["// src/components/Statistics.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getStatistics } from '../api/api';\r\n\r\nconst Statistics = () => {\r\n    const [stats, setStats] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const month = \"January\"; // Example month, you can make this dynamic\r\n\r\n    useEffect(() => {\r\n        const fetchStatistics = async () => {\r\n            setLoading(true);\r\n            try {\r\n                // const data = await getStatistics(month);\r\n                // setStats(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchStatistics();\r\n    }, [month]);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Statistics for {month}</h2>\r\n            <p>Total Sales: ${stats.totalSales}</p>\r\n            <p>Total Sold Items: {stats.totalSoldItems}</p>\r\n            <p>Total Not Sold Items: {stats.totalNotSoldItems}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,KAAK,GAAG,SAAS,CAAC,CAAC;;EAEzBb,SAAS,CAAC,MAAM;IACZ,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChCJ,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA;QACA;MAAA,CACH,CAAC,OAAOK,GAAG,EAAE;QACVH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACNN,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDI,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIV,KAAK,EAAE,oBAAOP,OAAA;IAAAa,QAAA,GAAK,SAAO,EAACN,KAAK;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACIjB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,GAAI,iBAAe,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BjB,OAAA;MAAAa,QAAA,GAAG,gBAAc,EAACV,KAAK,CAACe,UAAU;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCjB,OAAA;MAAAa,QAAA,GAAG,oBAAkB,EAACV,KAAK,CAACgB,cAAc;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CjB,OAAA;MAAAa,QAAA,GAAG,wBAAsB,EAACV,KAAK,CAACiB,iBAAiB;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAACf,EAAA,CAlCID,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}