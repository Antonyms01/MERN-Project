{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Frontend\\\\myapp\\\\src\\\\Components\\\\Statistics.js\",\n  _s = $RefreshSig$();\n// src/components/Statistics.js\nimport React, { useEffect, useState } from 'react';\nimport { getStatistics } from '../api/api'; // Import the API function to fetch statistics\nimport './Statis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = ({\n  month\n}) => {\n  _s();\n  const [statistics, setStatistics] = useState({\n    totalSales: 0,\n    totalSoldItems: 0,\n    totalNotSoldItems: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to fetch statistics based on the selected month\n  const fetchStatistics = async () => {\n    setLoading(true);\n    try {\n      const data = await getStatistics(month); // Fetch statistics\n      setStatistics(data); // Update statistics state\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      setError('Error fetching statistics');\n      setStatistics({\n        totalSales: 0,\n        totalSoldItems: 0,\n        totalNotSoldItems: 0\n      }); // Clear statistics on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch statistics when the month changes\n  useEffect(() => {\n    fetchStatistics(); // Fetch statistics when the component mounts or month changes\n  }, [month]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading statistics...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Statistics for \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"statistics-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Sales Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Sold Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Not Sold Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", statistics.totalSales.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: statistics.totalSoldItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: statistics.totalNotSoldItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Statistics, \"6f5fOc+VdlMRhc5Qdh89cAvhcLM=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useEffect","useState","getStatistics","jsxDEV","_jsxDEV","Statistics","month","_s","statistics","setStatistics","totalSales","totalSoldItems","totalNotSoldItems","loading","setLoading","error","setError","fetchStatistics","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toFixed","_c","$RefreshReg$"],"sources":["D:/MERN/Frontend/myapp/src/Components/Statistics.js"],"sourcesContent":["// src/components/Statistics.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getStatistics } from '../api/api'; // Import the API function to fetch statistics\r\nimport './Statis.css';\r\n\r\nconst Statistics = ({ month }) => {\r\n    const [statistics, setStatistics] = useState({\r\n        totalSales: 0,\r\n        totalSoldItems: 0,\r\n        totalNotSoldItems: 0,\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Function to fetch statistics based on the selected month\r\n    const fetchStatistics = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getStatistics(month); // Fetch statistics\r\n            setStatistics(data); // Update statistics state\r\n            setError(null); // Clear any previous errors\r\n        } catch (err) {\r\n            setError('Error fetching statistics');\r\n            setStatistics({ totalSales: 0, totalSoldItems: 0, totalNotSoldItems: 0 }); // Clear statistics on error\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch statistics when the month changes\r\n    useEffect(() => {\r\n        fetchStatistics(); // Fetch statistics when the component mounts or month changes\r\n    }, [month]);\r\n\r\n    if (loading) return <div>Loading statistics...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"statistics\">\r\n            <h3>Statistics for {month}</h3>\r\n            <table className=\"statistics-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Total Sales Amount</th>\r\n                        <th>Total Sold Items</th>\r\n                        <th>Total Not Sold Items</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>${statistics.totalSales.toFixed(2)}</td>\r\n                        <td>{statistics.totalSoldItems}</td>\r\n                        <td>{statistics.totalNotSoldItems}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}